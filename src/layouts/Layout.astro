---
import "../styles/global.css";

export interface Props {
  title?: string;
  description?: string;
}

const { title = "AIEngineeringLog", description = "Study notes and project walkthroughs from college students building AI stuff. Real projects, real struggles, and what actually worked." } = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <meta name="description" content={description} />
        <title>{title}</title>
        
        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,600;1,400&display=swap" rel="stylesheet">
        
        <!-- Theme initialization script - runs immediately to prevent FOUC -->
        <script is:inline>
          (function() {
            try {
              // Get theme preference
              const savedTheme = localStorage.getItem('theme');
              const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
              const theme = savedTheme || (prefersDark ? 'dark' : 'light');
              
              // Set theme immediately
              document.documentElement.setAttribute('data-theme', theme);
            } catch (e) {
              // Fallback if localStorage is not available
              const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
              document.documentElement.setAttribute('data-theme', prefersDark ? 'dark' : 'light');
            }
          })();
        </script>
    </head>
    <body>
        <slot />
    </body>
</html>
